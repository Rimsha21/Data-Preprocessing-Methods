# -*- coding: utf-8 -*-
"""Finding outlier in a dataset

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P1yPmoNz7P20r1MBFGmGZxnw_QbRfmmM
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

dataset= [11,10,12,14,12,15,14,13,15,102,12,14,17,19,107, 10,13,12,14,12,108,12,11,14,13,15,10,15,12,10,14,13,15,10]

outliers=[]
def detect_outliers(data):
    
    threshold=3
    mean = np.mean(data)
    std =np.std(data)
    
    
    for i in data:
        z_score= (i - mean)/std 
        if np.abs(z_score) > threshold:
            outliers.append(y)
    return outliers

outlier_pt=detect_outliers(dataset)

# INTERQUARTILE RANGE
sorted(dataset)

quantile1, quantile3= np.percentile(dataset,[25,75])

print(quantile1,quantile3)

iqr_value=quantile3-quantile1
print(iqr_value)

print(lower_bound_val,upper_bound_val)

