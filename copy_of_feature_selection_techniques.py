# -*- coding: utf-8 -*-
"""Copy of Feature SeLECTION tECHNIQUES

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VesGj5xeeU34Ow3cqnDBy8caTxlw_90B
"""

import pandas as pd
import numpy as np

from google.colab import files

files = files.upload()

import io

df = pd.read_csv(io.BytesIO(files['train.csv']))

df.head()

from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import chi2

X = df.iloc[:,0:20]
y = df.iloc[:,-1]

bestfeatures = SelectKBest(score_func=chi2, k=10)
fit = bestfeatures.fit(X,y)

dfscores = pd.DataFrame(fit.scores_)
dfcolumns = pd.DataFrame(X.columns)

featureScores = pd.concat([dfcolumns, dfscores], axis=1)
featureScores.columns = ['Specs','Score']

featureScores

print(featureScores.nlargest(10, 'Score'))

#Extra Trees Classifier
from sklearn.ensemble import ExtraTreesClassifier
import matplotlib.pyplot as plt
model = ExtraTreesClassifier()
model.fit(X,y)

print(model.feature_importances_)

feat_importances = pd.Series(model.feature_importances_, index= X.columns)
feat_importances.nlargest(10).plot(kind='barh')
plt.show()

#Correlation
import seaborn as sns
corrmat = df.corr()
top_corr_features = corrmat.index
plt.figure(figsize=(20,20))
g = sns.heatmap(df[top_corr_features].corr(), annot=True, cmap="RdYlGn")

